1. python和OOP
python不会实现C++中的多态，后一个func定义会覆盖前一个func。
class C:
  def func(a,b,c):
    pass
  def func(a):
    pass

2. OOP和继承

3. OOP和组合

4. OOP和委托

5. 类的伪私有属性
python类中以一个下划线定义的属性默认为不应该修改的属性。
变量名压缩：在class中以两个下划线开头的，但结尾没有下划线的变量名，会自动扩张成为_class__attr，这样不会和其他变量名重复。
伪私有属性主要用于避免继承过程中类属性的命名冲突问题。

6. 方法是对象
无绑定方法：类函数定义没有self，通过class.func的形式调用，需要传入实例（python2.x中）。
有绑定方法：class: def func(self)
获得无绑定方法： x = class.func
在python3.0中，没有实例参数的类方法视为函数，不可以通过类实例调用，通过类函数直接调用。

7. 多重继承
在多重继承中，属性搜索处理沿着树层级，以更加广度优先的方式进行。

8. 类是对象

9. 与设计相关的话题
