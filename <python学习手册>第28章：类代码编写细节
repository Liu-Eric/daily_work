1. class语句
class语句执行时创建一个类对象。
类的命名空间也是python继承的基础，在类和实例中找不到的属性，会在继承树中继续搜索。
类的属性在实例中共享。

2. 方法
python会自动把实例方法的调用对应到类的方法上，所以方法的第一个参数是self：
instance.method(...) >> class.method(instance, ...)
class通过继承机制找到方法的定义处。
调用超类的构造方法：
class sub(base):
  def __init__(self, x, y):
    base.__init__(self, x)
    self.y = y
    
3. 继承
每次使用object.attr形式的时候，python会从尾至头搜索命名空间继承树，从对象开始，到类和超类，寻找第一个能够找到的attr。
可以在超类中调用一个没有定义内容方法，在子类中定义这个方法。实例先找到超类的方法，在找到子类的方法定义。这种代码方式称为'填空'，类的部分行为默认由子类提供，超类中一般定义assert/raise，以防子类没有定义导致的异常。

4. 命名空间：完整的内容

5. 回顾文档字符串

6. 类与模块的关系
