1.1 为何使用函数 
最大化的代码重用和最小化的代码冗余
流程的分解
当函数调用时，调用者停止运行将控制权交给函数，直到函数完成它的工作，函数将调用权返回给调用者。

1.2 def语句
函数定义
def <func_name>(arg1, arg2, ..., argN):
    <statement>
    return <value>
    
def语句在运行时将创建一个函数对象（与其他对象类型一致），并将其赋给一个变量名，函数名仅仅是函数对象的引用，函数允许任意对象附加到函数属性上。
def func_name1():
    pass
func_name2 = func_name1
func_name2.attr = value

def语句是实时执行语句，可以出现在任何位置，包括while、if等嵌套结构中。
if condition：
    def func()
else:
    def func()
    
return语句返回函数结果，如果没有return语句，返回None。

1.3函数的多态
函数的操作意义取决于函数操作对象，如果函数的操作不支持操作对象，会抛出一个异常。
def times(x,y)
    return x * y
times(2,5)
times('Hello', 10)

1.4本地变量
所有在函数内被赋值的变量名都被认为是本地变量（包括在参数赋值时），本地变量仅在函数运行时存在并可见，在函数运行后消失。
